// Problem: Given a sorted array of characters `letters` and a target character `target`, 
// find the smallest character in `letters` that is strictly greater than `target`. 
// If no such character exists, return the first character of `letters`.
//
// Approach:
//          - Perform a binary search on the sorted array `letters` to find the smallest character greater than `target`.
//          - If no character is found greater than `target`, return the first character in the array.
//
// Time Complexity: O(log n), where n is the size of the array. The binary search runs in O(log n) time.
// Space Complexity: O(1), as no extra space is used except for the variables.

class Solution {
public:
    char nextGreatestLetter(vector<char>& letters, char target) {
         int l=0; int r=letters.size()-1;
         char ans='!';
         while(l<=r){
            int mid=(l+r)/2;
            if(letters[mid]>target){  // compare 
                ans=letters[mid];
                r=mid-1;
            }
            else {
                l=mid+1;
            }

         }
         if(ans=='!')return letters[0];
         else return ans;
    }
};
