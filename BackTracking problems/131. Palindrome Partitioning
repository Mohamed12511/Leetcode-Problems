class Solution {
    vector<string>cur;string t;
   bool chekP(string s){
    for(int i=0;i<s.size()/2;i++){
        if(s[i]!=s[s.size()-1-i]){
            return false;
         } 
    }
    return true;
   }

   void GetPartitions(int p,vector<vector<string>>&ret){
    if(p==t.size()){
        ret.push_back(cur);
        return ;
    }

    for(int i=p;i<t.size();i++){
        string temp=t.substr(p,i-p+1);
        if(chekP(temp)){
            cur.push_back(temp);
            GetPartitions(i+1,ret);
            cur.pop_back();
        }
    }
   }

public:
    vector<vector<string>> partition(string s) {
    vector<vector<string>>ret;
       t=s;

     GetPartitions(0,ret);
         


    return ret; 
    }
};
